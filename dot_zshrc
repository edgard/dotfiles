#!/usr/bin/env zsh

# Source Catppuccin FrappÃ© theme variables
source "${HOME}/.zsh/_theme.zsh"

##############################################################################
# Type Declarations (Unique, Ordered Arrays)
##############################################################################

typeset -gU path PATH
typeset -gUT FPATH fpath

##############################################################################
# macOS System Path Setup
##############################################################################

if [[ "$OSTYPE" == darwin* ]] && [[ -x "/usr/libexec/path_helper" ]]; then
    eval "$(/usr/libexec/path_helper -s)"
fi

##############################################################################
# Homebrew Environment Setup
##############################################################################

if [[ "$OSTYPE" == darwin* ]]; then
    for brew_path in /opt/homebrew/bin/brew /usr/local/bin/brew; do
        if command -v "$brew_path" >/dev/null 2>&1; then
            eval "$("$brew_path" shellenv)"
            break
        fi
    done
else
    for brew_path in /home/linuxbrew/.linuxbrew/bin/brew "$HOME/.linuxbrew/bin/brew"; do
        if command -v "$brew_path" >/dev/null 2>&1; then
            eval "$("$brew_path" shellenv)"
            break
        fi
    done
fi

##############################################################################
# User Binaries
##############################################################################

[[ -d "${HOME}/.go/bin" ]] && path+=("${HOME}/.go/bin")
[[ -d "${HOME}/.npm-global/bin" ]] && path+=("${HOME}/.npm-global/bin")
[[ -d "${HOME}/.gem/bin" ]] && path+=("${HOME}/.gem/bin")
[[ -d "${HOME}/.cargo/bin" ]] && path+=("${HOME}/.cargo/bin")
[[ -d "${HOME}/.local/bin" ]] && path=("${HOME}/.local/bin" ${path})
[[ -d "${HOME}/Documents/Projects/dev-utils/bin" ]] && path=("${HOME}/Documents/Projects/dev-utils/bin" ${path})

##############################################################################
# Language Environment Variables
##############################################################################

command -v go >/dev/null 2>&1 && export GOPATH="${HOME}/.go"
[[ -d "${HOME}/.npm-global" ]] && export NPM_CONFIG_PREFIX="${HOME}/.npm-global"
command -v gem >/dev/null 2>&1 && export GEM_HOME="${HOME}/.gem"
[[ -f "${HOME}/.cargo/env" ]] && source "${HOME}/.cargo/env"

##############################################################################
# Deferred Modular Zsh Configurations
##############################################################################

autoload -Uz add-zsh-hook

_defer_zsh_configs() {
    for config_file in "${HOME}"/.zsh/<->-*.zsh(.N); do
        source "${config_file}" || printf "Error: Failed to source %s\n" "${config_file##*/}" >&2
    done
    add-zsh-hook -d precmd _defer_zsh_configs
}

add-zsh-hook precmd _defer_zsh_configs

##############################################################################
# Cleanup helper variables
##############################################################################

unset brew_path config_file
