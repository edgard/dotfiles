#!/usr/bin/env bash

# -----------------------------------------------------------------------------
# basic setup
# -----------------------------------------------------------------------------
# if not running interactively, don't do anything
[[ $- != *i* ]] && return

# set locale
export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"
export LANGUAGE="en_US.UTF-8"

# helper funcions
if_os() { [[ $OSTYPE == *$1* ]]; }

# run tmux
if_os linux && {
    if command -v tmux &>/dev/null && [[ -z "$TMUX" ]]; then
        tmux attach -t default || tmux new -s default
        exit
    fi
}

# -----------------------------------------------------------------------------
# bash options
# -----------------------------------------------------------------------------
shopt -s checkwinsize
shopt -s cmdhist
shopt -s histappend
shopt -s direxpand
shopt -s dirspell

bind 'set colored-completion-prefix on'
bind 'set colored-stats on'
bind 'set completion-ignore-case on'
bind 'set completion-query-items 200'
bind 'set mark-symlinked-directories on'
bind 'set page-completions off'
bind 'set show-all-if-ambiguous on'
bind 'set skip-completed-text on'
bind 'set visible-stats on'
bind 'set enable-keypad on'
bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'

HISTCONTROL="erasedups:ignoreboth"
HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history:clear:update"
HISTFILESIZE="100000"
HISTSIZE="${HISTFILESIZE}"

# bash prompt
PS1='[\u \W]\$ '

# additional local paths
export PATH="/usr/local/bin:/usr/local/sbin:${PATH}"

# pager
export PAGER="less"
export LESS="FRX"

# ls colors
if_os linux && [[ -f "${HOME}/.dir_colors" ]] && eval "$(dircolors -b "${HOME}/.dir_colors")"
if_os darwin && export LSCOLORS="ExGxFxdaCxDaDahbadacec"

# aliases
alias grep="grep --color --exclude-dir=.hg --exclude-dir=.svn --exclude-dir=.git --exclude-dir=.bzr --exclude-dir=CVS --binary-files=without-match"

if_os linux && {
    alias ls="ls -FGhN --color=auto"
    function update() {
        yay -Syyuu --needed
        yay -Rns "$(yay -Qtdq)"
        (cd ~/.pyenv && git pull)
        (cd ~/.pyenv/plugins/pyenv-virtualenv && git pull)
        (cd ~/.pyenv/plugins/xxenv-latest && git pull)
        (cd ~/.tfenv && git pull)
    }
    function setenv() {
        case $1 in
        proxy)
            local _proxy="http://***REMOVED***:3128"
            export http_proxy="${_proxy}"
            export https_proxy="${_proxy}"
            export HTTP_PROXY="${_proxy}"
            export HTTPS_PROXY="${_proxy}"
            export ALL_PROXY="${_proxy}"
            ;;
        -proxy)
            unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY ALL_PROXY
            ;;
        creds)
            export GOOGLE_APPLICATION_CREDENTIALS="${HOME}/.creds/gcp/jenkins.json"
            ;;
        -creds)
            unset GOOGLE_APPLICATION_CREDENTIALS
            ;;
        pynossl)
            export PYTHONHTTPSVERIFY="0"
            ;;
        -pynossl)
            unset PYTHONHTTPSVERIFY
            ;;
        *)
            echo "Need to specify which env varibles to set"
            ;;
        esac
    }
}

if_os darwin && {
    alias ls="ls -FGh"
    function update() {
        brew update
        brew upgrade
        brew cask outdated | xargs brew cask reinstall
        mas upgrade
        brew cleanup -s
    }
}

# -----------------------------------------------------------------------------
# tools
# -----------------------------------------------------------------------------
if_os linux && {
    # nvim
    if command -v nvim 1>/dev/null 2>&1; then
        alias vi="nvim"
        alias vim="nvim"
        export EDITOR="nvim"
        export VISUAL="${EDITOR}"
    fi

    # fzf
    if command -v fzf 1>/dev/null 2>&1; then
        export FZF_DEFAULT_OPTS="--inline-info --layout=reverse --color=dark --color=fg:#abb2bf,bg:#282c34,hl:#5c6370,fg+:#abb2bf,bg+:#2c323c,hl+:#c678dd,info:#e5c07b,prompt:#c678dd,pointer:#c678dd,marker:#e06c75,spinner:#c678dd,header:#5c6370"
        if command -v tmux &>/dev/null && [[ -n "$TMUX" ]]; then
            export FZF_TMUX="1"
            export FZF_TMUX_HEIGHT="10"
        else
            export FZF_DEFAULT_OPTS="${FZF_DEFAULT_OPTS} --height 10"
        fi
        if command -v fd &>/dev/null; then
            export FZF_DEFAULT_COMMAND="fd . ${HOME}"
            export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"
            export FZF_ALT_C_COMMAND="fd -t d . ${HOME}"
        fi
        export PROMPT_COMMAND="history -a; history -n; ${PROMPT_COMMAND}"
        source /usr/share/fzf/key-bindings.bash
    fi

    # go
    if command -v go 1>/dev/null 2>&1; then
        export GOPATH="${HOME}/.go"
        export PATH="${GOPATH}/bin:${PATH}"
    fi

    # pyenv
    if [[ -s "${HOME}/.pyenv/bin/pyenv" ]]; then
        export PYENV_VIRTUALENV_DISABLE_PROMPT=1
        export PATH="${HOME}/.pyenv/bin:${PATH}"
        eval "$(pyenv init -)"
    fi

    # tfenv
    [[ -s "${HOME}/.tfenv/bin/tfenv" ]] && export PATH="${HOME}/.tfenv/bin:${PATH}"
}

# -----------------------------------------------------------------------------
# additional path manipulation
# -----------------------------------------------------------------------------
# includes user's private bin if it exists
[[ -d "${HOME}/.local/bin" ]] && export PATH="${HOME}/.local/bin:${PATH}"

# remove duplicate path entries
PATH="$(perl -e 'print join(":", grep { not $seen{$_}++ } split(/:/, $ENV{PATH}))')"
